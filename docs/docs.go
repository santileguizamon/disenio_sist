// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/datos-procesados": {
            "get": {
                "description": "Obtiene los datos procesados y depurados almacenados en memoria",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "procesamiento"
                ],
                "summary": "Consultar datos procesados",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.DatosProcesadosResponse"
                        }
                    },
                    "405": {
                        "description": "Method Not Allowed",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/procesar": {
            "post": {
                "description": "Recibe datos crudos, los procesa y depura, y dispara eventos de notificación",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "procesamiento"
                ],
                "summary": "Procesar datos crudos",
                "parameters": [
                    {
                        "description": "Datos crudos a procesar",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.DatosProcesamientoRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.ProcesamientoResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "405": {
                        "description": "Method Not Allowed",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/reporte": {
            "get": {
                "description": "Obtiene el último reporte generado usando el patrón Builder",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "procesamiento"
                ],
                "summary": "Obtener último reporte",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.ReporteResponse"
                        }
                    },
                    "405": {
                        "description": "Method Not Allowed",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "handlers.DatosProcesadosResponse": {
            "type": "object",
            "properties": {
                "productos": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "additionalProperties": true
                    }
                },
                "sucursales": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "additionalProperties": true
                    }
                },
                "ventas": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "additionalProperties": true
                    }
                }
            }
        },
        "handlers.DatosProcesamientoRequest": {
            "type": "object"
        },
        "handlers.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "Bad Request"
                },
                "message": {
                    "type": "string",
                    "example": "JSON inválido"
                },
                "time": {
                    "type": "string",
                    "example": "2024-01-15T10:30:00Z"
                }
            }
        },
        "handlers.ProcesamientoResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Datos procesados y depurados y reporte generado"
                },
                "status": {
                    "type": "string",
                    "example": "Proceso completado exitosamente"
                },
                "time": {
                    "type": "string",
                    "example": "2024-01-15T10:30:00Z"
                }
            }
        },
        "handlers.ReporteResponse": {
            "type": "object",
            "properties": {
                "Datos": {
                    "type": "object",
                    "additionalProperties": true
                },
                "Estado": {
                    "type": "string",
                    "example": "completado"
                },
                "FechaFin": {
                    "type": "string",
                    "example": "2024-01-15T23:59:59Z"
                },
                "FechaInicio": {
                    "type": "string",
                    "example": "2024-01-01T00:00:00Z"
                },
                "Filtros": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "[\"fecha_inicio\"",
                        "\"fecha_fin\"]"
                    ]
                },
                "GeneradoEn": {
                    "type": "string",
                    "example": "2024-01-15T12:00:00Z"
                },
                "ID": {
                    "type": "integer",
                    "example": 1
                },
                "Resumen": {
                    "type": "string",
                    "example": "Reporte de ventas del período"
                },
                "Tipo": {
                    "type": "string",
                    "example": "ventas"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/",
	Schemes:          []string{"http"},
	Title:            "Sistema de Procesamiento de Datos API",
	Description:      "API RESTful con arquitectura dirigida por eventos para procesamiento, depuración y consulta de datos de productos, ventas y sucursales",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
